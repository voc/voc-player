import {ContainerPlugin, Events, $} from "@clappr/core";

export default class ErrorPlugin extends ContainerPlugin {
  static get version() {
    return "1.0.0";
  }

  get name() { return 'error_plugin' }
  get background() {
    return 'data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22100%22%20height%3D%22100%22%20viewBox%3D%220%200%2026.458318%2026.458333%22%3E%3Cpath%20d%3D%22M13.23.302C6.07.302.264%206.107.264%2013.267a12.965%2012.965%200%200%200%20.847%204.595c.19-.497.408-.982.682-1.438.14-.232.294-.457.396-.707.103-.25.15-.533.072-.792a1.362%201.362%200%200%200-.22-.404c-.092-.123-.192-.24-.275-.37a1.662%201.662%200%200%201-.255-1.12%201.5%201.5%200%200%201%20.58-.987c.28-.208.635-.3.985-.288a1.757%201.757%200%200%201%20.346.048c.452.11.852.393%201.148.75.368.447.584%201.01.637%201.586a3.574%203.574%200%200%201-.275%201.693c-.4.955-1.15%201.725-1.565%202.673-.338.775-.435%201.638-.39%202.483.007.077.018.155.025.234a12.965%2012.965%200%200%200%203.62%203.18%2017.63%2017.63%200%200%201-.13-2.11c.002-.56.03-1.12.085-1.675-.34-.236-.65-.51-.87-.86-.392-.62-.466-1.408-.305-2.124.16-.717.54-1.37.997-1.945a7.833%207.833%200%200%201%202.835-2.223%2010.305%2010.305%200%200%201-.09-.126%204.854%204.854%200%200%201-.702-2.176c-.06-.777.064-1.554.115-2.33.037-.543.04-1.085.07-1.627.038-.627.114-1.255.29-1.858a2.36%202.36%200%200%201%20.266-.63%201.4%201.4%200%200%201%20.594-.514c.274-.108.51-.132.776-.087.22.046.425.156.604.294.18.138.335.304.48.477a7.298%207.298%200%200%201%201.04%201.617%203.57%203.57%200%200%201%201.09%200%207.287%207.287%200%200%201%201.04-1.616%203.21%203.21%200%200%201%20.48-.476c.18-.14.383-.248.604-.295a1.268%201.268%200%200%201%20.78.086%201.402%201.402%200%200%201%20.595.517c.124.19.202.408.266.626.175.602.252%201.23.29%201.856.03.543.033%201.087.07%201.628.05.777.175%201.554.116%202.33a4.855%204.855%200%200%201-.705%202.178c-.03.05-.07.096-.103.145.247.278.598.513.898.614a1.956%201.956%200%200%200%201.05.044%201.65%201.65%200%200%200%20.533-.226%201.253%201.253%200%200%200%20.397-.418c.118-.21.166-.45.192-.687.067-.61%200-1.224-.05-1.835-.034-.396-.062-.8.027-1.187.06-.26.177-.518.373-.7a1.106%201.106%200%200%201%20.465-.255%201.312%201.312%200%200%201%20.53-.03c.38.057.736.274.948.594.12.18.194.39.238.604.044.213.06.43.072.648.04.76.04%201.522.018%202.284-.018.665-.055%201.348-.32%201.957-.343.782-1.032%201.366-1.775%201.786a7.052%207.052%200%200%201-1.588.647c.482%201.54.733%203.24.733%204.968a17.6%2017.6%200%200%201-.135%202.125%2012.964%2012.964%200%200%200%206.384-11.152c0-7.16-5.806-12.965-12.965-12.965zM9.602%2016.284v1.483a1.88%201.88%200%200%201%201.083.362%201.738%201.738%200%200%201%20.556.68c.122.27.166.576.116.868a1.493%201.493%200%200%201-.332.708%201.647%201.647%200%200%201-.635.458%201.738%201.738%200%200%201-.787.122v3.73l7.762-4.208-7.762-4.204z%22%20fill%3D%22%23999%22%2F%3E%3C%2Fsvg%3E';
  }

  constructor(...options) {
    super(...options);
    this.timeout = 1;
    this.max_timeout = 10;
  }

  bindEvents() {
    this.listenTo(this.container, Events.CONTAINER_ERROR, this.onError)
  }

  hide() {
    this._err && this._err.remove()
  }

  show(options) {
    this.hide();

    const title = options && options.title || "Oh no, we encountered an error";
    const subtitle = options && options.subtitle || "Please reload the page";

    this._err = $('<div>')
      .css({
        'position': 'absolute',
        'z-index': '999',
        'width': '100%',
        'height': '100%',
        'background-image': 'url(' + this.background + ')',
        'background-size': '18%',
        'background-repeat': 'no-repeat',
        'background-color': 'black',
        'background-position': 'center',
        'text-align': 'center',
        'font-weight': 'bold',
        'color': '#eee'
      })
    const wrap = $('<div>').css({
        'position': 'absolute',
        'width': '100%',
        'padding-bottom': '5%',
        'bottom': 0
      })
      .append($('<h2>')
        .text(title)
        .css({
          'font-size': '2em',
        }))
      .append($('<p>').text(subtitle)
        .css({
          'font-size': '1.2em',
          'margin': '15px',
        }));
    this._err.append(wrap);
    this.container && this.container.$el.prepend(this._err);
  }

  onError(err) {
    if (!this.container) return;

    const hideOverlay = () => {
      this.hide();
      this.container.getPlugin('click_to_pause').enable();
    };

    // Only show overlay if callback returns true
    const callback = this.options.errorPlugin.onError;
    let opts = null;
    if (callback && typeof(callback) === "function") {
      opts = callback(err, hideOverlay);
    }

    this.show(opts);
    this.container.getPlugin('click_to_pause').disable();
  }
};